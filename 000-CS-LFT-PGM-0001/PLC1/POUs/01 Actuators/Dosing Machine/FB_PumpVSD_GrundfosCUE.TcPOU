<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_PumpVSD_GrundfosCUE" Id="{722414c5-6d86-447c-a49d-497430513ce9}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'OPC.UA.DA.StructuredType' := '1'}
FUNCTION_BLOCK FB_PumpVSD_GrundfosCUE EXTENDS FB_BaseDevice IMPLEMENTS I_Device, I_PumpVSD

VAR_IN_OUT
	{attribute 'OPC.UA.DA' := '0'}
	fbModbusMaster: FB_ModbusMaster;
END_VAR


VAR

	//MB:  REFERENCE TO FB_ModbusMaster;
	{attribute 'OPC.UA.DA' := '1'} 
	bInContactor AT %I*: BOOL := FALSE;
	{attribute 'OPC.UA.DA' := '1'} 
	bOutContactor AT %Q*: BOOL := FALSE;
	
	{attribute 'OPC.UA.DA' := '1'} 
	nFrequencySetPoint: REAL := 0;
	{attribute 'OPC.UA.DA' := '1'} 
	nFrequencyActual: REAL := 0;
	
	{attribute 'OPC.UA.DA' := '0'} 
	eSMState: (WAIT, STARTING, RUNNING, STOPPING, STOPPED);
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbTONstartTime();
fbTONstopTime();

IF GVL.bAutoUpdateDeviceState THEN
	eState := eStateTarget;	
END_IF


IF bEnable THEN
	IF eStateTarget = E_DeviceState.ON AND eState <> E_DeviceState.ON THEN
		eSMState := STARTING;
	END_IF
END_IF

IF eStateTarget = E_DeviceState.OFF AND eState <> E_DeviceState.OFF THEN
		eSMState := STOPPING;
END_IF


CASE eSMState OF
	
	WAIT:
		//Wait for method call to change ESMState
		
	STARTING: 
		eState := E_DeviceState.STARTING;

		bOutContactor := TRUE;
	
		IF fbTONstartTime.Q THEN
			eSMState := WAIT;
			raiseAlarm(Priority := E_AlarmPriority.High, Label := 'Failed to Start', Enabled := TRUE, DeviceAlarmID := 1);
		END_IF
		
		IF bInContactor THEN
			eSMState := RUNNING;
			eState := E_DeviceState.ON;
		END_IF
		
	RUNNING:
		IF bInContactor <> TRUE THEN
			raiseAlarm(Priority := E_AlarmPriority.High, Label := 'Power Lost', Enabled := TRUE, DeviceAlarmID := 2);
			eState := E_DeviceState.OFF;
			eSMState := WAIT;
		END_IF
		
		// Add pump / motor control here - look at built in Twincat libraries 
		// Add relevant VSD signals to check
		

	STOPPING:
		eState := E_DeviceState.STOPPING;
		bOutContactor := FALSE;
				
		IF fbTONstopTime.Q THEN
			eSMState := WAIT;
			raiseAlarm(Priority := E_AlarmPriority.High, Label := 'Failed to Stop', Enabled := TRUE, DeviceAlarmID := 3);
		END_IF 
		
		IF bInContactor = FALSE AND nFrequencyActual = 0 THEN
			eSMState := STOPPED;	
		END_IF
		

	STOPPED:
		eState := E_DeviceState.IDLE;
		eSMState := WAIT;
		
		
END_CASE]]></ST>
    </Implementation>
    <Method Name="disable" Id="{62dcef2e-b6a6-4182-97d0-a84c09a1bdcf}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD disable : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="enable" Id="{6dc9651f-67fa-4975-8eb1-5056b3a1b05e}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD enable : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2bb5dcfc-041c-4853-95c2-4c214670f593}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD FB_init : BOOL
VAR_INPUT
	(* if TRUE, the retain variables are initialized (warm start / cold start)*)
	bInitRetains	: BOOL;
	(* if TRUE, the instance afterwards gets moved into the copy code (online change)*)
	bInCopyCode	: BOOL;
	PumpID	: STRING(80);
	PumpDescr	: STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[sID := PumpID;
sDescr := PumpDescr;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getFrequency" Id="{e867218a-051f-4286-8104-fab13d0b9abc}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD getFrequency : REAL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="setModbusMaster" Id="{2a268c2f-9c79-407c-8634-c2e0b2ab3bf8}">
      <Declaration><![CDATA[METHOD setModbusMaster : BOOL
METHOD setModbusMaster : BOOL
VAR_INPUT
	//ModbusMaster: REFERENCE TO FB_ModbusMaster;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//MB := ModbusMaster;]]></ST>
      </Implementation>
    </Method>
    <Method Name="setOff" Id="{0bc1ecbd-152d-400e-90fd-d13735012d11}">
      <Declaration><![CDATA[METHOD setOff : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="setOn" Id="{5f610bfa-09bd-423f-bdff-780f9d05e7c4}">
      <Declaration><![CDATA[METHOD setOn : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="setReference" Id="{9f651b9c-92bd-4dcf-92e1-f4e7b47254cc}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD setReference : BOOL
VAR_INPUT
	RefSetPoint	: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_PumpVSD_GrundfosCUE">
      <LineId Id="79" Count="1" />
      <LineId Id="165" Count="0" />
      <LineId Id="167" Count="2" />
      <LineId Id="166" Count="0" />
      <LineId Id="81" Count="61" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.disable">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.enable">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.FB_init">
      <LineId Id="23" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.getFrequency">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.setModbusMaster">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.setOff">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.setOn">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PumpVSD_GrundfosCUE.setReference">
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>